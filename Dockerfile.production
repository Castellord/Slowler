# Multi-stage build for production without nginx
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY src/ ./src/
COPY public/ ./public/

# Build the application
RUN npm run build

# Production stage - simple HTTP server
FROM node:18-alpine AS production

# Install serve for static file serving
RUN npm install -g serve

# Create app directory
WORKDIR /app

# Copy built application from builder stage
COPY --from=builder /app/build ./build

# Create a simple startup script
RUN echo '#!/bin/sh' > start.sh && \
    echo 'echo "🚀 Starting SETINA Slowdown App frontend..."' >> start.sh && \
    echo 'echo "📁 Serving static files from /app/build"' >> start.sh && \
    echo 'echo "🌐 Server will be available on port 80"' >> start.sh && \
    echo 'serve -s build -l 80' >> start.sh && \
    chmod +x start.sh

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1

# Start the server
CMD ["./start.sh"]
