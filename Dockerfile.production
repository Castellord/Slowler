# Production Dockerfile for Coolify deployment
FROM node:18-alpine as build

WORKDIR /app

# Копируем только package.json
COPY package.json ./

# Устанавливаем зависимости
RUN npm install --production=false

# Копируем исходный код
COPY src ./src
COPY public ./public

# Собираем приложение
RUN npm run build

# Production stage с nginx
FROM nginx:alpine

# Устанавливаем curl для health checks
RUN apk add --no-cache curl

# Копируем собранное приложение
COPY --from=build /app/build /usr/share/nginx/html

# Копируем конфигурацию nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Создаем пользователя nginx
RUN addgroup -g 101 -S nginx && \
    adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx

# Устанавливаем правильные права
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# Создаем директории для nginx
RUN touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid

EXPOSE 80

# Запускаем от имени nginx пользователя
USER nginx

CMD ["nginx", "-g", "daemon off;"]
